import cachetools
import random
import hashlib
from .gigachat_api import gigachat_request

# –ö—ç—à –Ω–∞ 1 —á–∞—Å –¥–ª—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
cache = cachetools.TTLCache(maxsize=1000, ttl=3600)

# –§–æ–ª–±—ç–∫–∏ ‚Äî –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –ò–ò
FALLBACK_PROMPTS = {
    'question': [
        "–°–æ–∑–¥–∞–π –∏–¥–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—Å—Ç –≥–ª—É–±–æ–∫–∏–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å: {input}. –í–∫–ª—é—á–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏–º–µ—Ä—ã, –∫–æ–Ω—Ç—Ä–∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏.",
        "–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ò–ò, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–∞: {input}. –ó–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å —Ä–∞–∑–¥–µ–ª—ã: –∫–æ–Ω—Ç–µ–∫—Å—Ç, –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –≤—ã–≤–æ–¥.",
        "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç –≤–æ–ø—Ä–æ—Å '{input}' –≤ —ç—Å—Å–µ —Å –≤–≤–µ–¥–µ–Ω–∏–µ–º, —Ç–µ–ª–æ–º –∏ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ–º."
    ],
    'event': [
        "–°–æ–∑–¥–∞–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª —Å–æ–±—ã—Ç–∏–µ '{input}' —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω, –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π, —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ 3 –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ö–æ–¥–æ–≤.",
        "–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ò–ò, —á—Ç–æ–±—ã –æ–Ω –∏—Å—Å–ª–µ–¥–æ–≤–∞–ª —Å–æ–±—ã—Ç–∏–µ '{input}' –∏ –¥–∞–ª –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –±—É–¥—É—â–µ–µ, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∞–Ω–∞–ª–æ–≥–∞—Ö.",
        "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–º–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –ò–ò —Å—Ä–∞–≤–Ω–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ '{input}' —Å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–º–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –≤—ã–¥–µ–ª–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —á–µ—Ä—Ç—ã."
    ],
    'advice': [
        "–°–æ–∑–¥–∞–π –ø–æ—à–∞–≥–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç –ø–æ '{input}'. –í–∫–ª—é—á–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, —Å—Ä–æ–∫–∏, —Ä–µ—Å—É—Ä—Å—ã –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏.",
        "–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ò–ò, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–∑–±–∏–ª —Ä–µ—à–µ–Ω–∏–µ '{input}' –Ω–∞ —ç—Ç–∞–ø—ã: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è, –æ—Ü–µ–Ω–∫–∞.",
        "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–º–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –ò–ò –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å 3 —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–∞ –∫ '{input}' —Å –ø–ª—é—Å–∞–º–∏, –º–∏–Ω—É—Å–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é."
    ],
    'book': [
        "–¢—ã ‚Äî –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å, –º–∞—Å—Ç–µ—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Ä—Ç—Ä–µ—Ç–∞ —á–µ—Ä–µ–∑ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Å—Ç–∏ –∫–æ—Ä–æ—Ç–∫–∏–π, –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤—ã–π –æ–ø—Ä–æ—Å (5‚Äì7 –≤–æ–ø—Ä–æ—Å–æ–≤), —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –ª–∏—á–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑ (300‚Äì500 —Å–ª–æ–≤)."
    ],
    'bot': [
        "–°–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–∑–¥–∞—Ç—å Telegram-–±–æ—Ç–∞ —Å –Ω—É–ª—è –Ω–∞ Python. –í–∫–ª—é—á–∏ –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ, –∫–æ–¥–∏–Ω–≥—É –∏ –¥–µ–ø–ª–æ—é.",
        "–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ò–ò –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é Telegram-–±–æ—Ç–∞, –æ—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π —É—Å—Ç–∞–Ω–æ–≤–∫—É –±–∏–±–ª–∏–æ—Ç–µ–∫, –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –ø—Ä–∏–º–µ—Ä—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.",
        "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–º–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –ò–ò —Å—Ç–∞—Ç—å –ª–∏—á–Ω—ã–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é Telegram-–±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ª—é–±—ã–º —É—Ä–æ–≤–Ω–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏."
    ],
    'image': [
        "–°—Ñ–æ—Ä–º–∏—Ä—É–π –ø—Ä–æ–º–ø—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è: {input}. –£–∫–∞–∂–∏ —Å—é–∂–µ—Ç, —Å—Ç–∏–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, cinematic, analog film), –∫–æ–º–ø–æ–∑–∏—Ü–∏—é (rule of thirds), –æ—Å–≤–µ—â–µ–Ω–∏–µ (soft light), —Ä–∞–∫—É—Ä—Å (close-up/medium/wide), –æ–±—ä–µ–∫—Ç–∏–≤ (35mm/50mm), —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É, –∫–ª—é—á–µ–≤—ã–µ –¥–µ—Ç–∞–ª–∏, —Ñ–æ–Ω –∏ –ø–æ—Å—Ç-–æ–±—Ä–∞–±–æ—Ç–∫—É."
    ],
    'video': [
        "–°—Ñ–æ—Ä–º–∏—Ä—É–π —Å—Ç–æ—Ä–∏–±–æ—Ä–¥-–ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä–æ–ª–∏–∫–∞: {input}. –£–∫–∞–∂–∏ –ª–æ–≥–ª–∞–π–Ω, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, 5‚Äì8 —Å—Ü–µ–Ω —Å —Ç–∞–π–º-–∫–æ–¥–∞–º–∏, –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∫–∞–¥—Ä–∞ (—Ä–∞–∫—É—Ä—Å/–ø–ª–∞–Ω/–¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã), –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, –∑–≤—É–∫–∏/–º—É–∑—ã–∫—É, –∫–ª—é—á–µ–≤–æ–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å."
    ],
}

async def generate_enhanced_prompt(category: str, user_input: str, **kwargs) -> str:
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã
    base_system_prompts = {
        'question': "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∏–¥–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ò–ò. –°–æ–∑–¥–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –ò–ò –¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≥–ª—É–±–æ–∫–∏–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç.",
        'event': "–¢—ã ‚Äî –º–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤. –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –ò–ò –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏—è —Å –ø—Ä–∏—á–∏–Ω–∞–º–∏, –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏ –∏ –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏.",
        'advice': "–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–æ–º–ø—Ç–∞–º. –°–æ–∑–¥–∞–π –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –ò–ò –¥–∞—Ç—å –ø–æ—à–∞–≥–æ–≤—ã–π, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–æ–≤–µ—Ç —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Å—Ä–æ–∫–∞–º–∏.",
        'book': "–¢—ã ‚Äî —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ò–ò. –í–µ—Ä–Ω–∏ –∏–¥–µ–∞–ª—å–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è ¬´–ö–Ω–∏–≥–∞ –æ —Å–µ–±–µ¬ª. –¢–æ–ª—å–∫–æ –ø—Ä–æ–º–ø—Ç, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π.",
        'bot': "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ–±—É—á–∞—é—â–∏–º –ø—Ä–æ–º–ø—Ç–∞–º –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –í–µ—Ä–Ω–∏ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–∑–¥–∞—Ç—å Telegram-–±–æ—Ç–∞ —Å –Ω—É–ª—è. –¢–æ–ª—å–∫–æ –ø—Ä–æ–º–ø—Ç, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π.",
        'image': "–¢—ã ‚Äî –∏–Ω–∂–µ–Ω–µ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –í–µ—Ä–Ω–∏ –æ–¥–∏–Ω –∏–¥–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å: —Å—é–∂–µ—Ç–æ–º, —Å—Ç–∏–ª–µ–º, —Ä–∞–∫—É—Ä—Å–æ–º, –∫–æ–º–ø–æ–∑–∏—Ü–∏–µ–π, –æ—Å–≤–µ—â–µ–Ω–∏–µ–º, –∫–ª—é—á–µ–≤—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏. –ù–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π.",
        'video': "–¢—ã ‚Äî –∏–Ω–∂–µ–Ω–µ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ/—Å—Ç–æ—Ä–∏–±–æ—Ä–¥–æ–≤. –í–µ—Ä–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É: –ª–æ–≥–ª–∞–π–Ω, —Å—Ü–µ–Ω—ã —Å —Ç–∞–π–º-–∫–æ–¥–∞–º–∏, –æ–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞–Ω–∞/–∫–∞–¥—Ä–∞, –¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã, —Ç–µ–∫—Å—Ç-–æ–∑–≤—É—á–∫–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ), –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã. –ù–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π."
    }
    system_prompt = base_system_prompts.get(category, "–°–æ–∑–¥–∞–π –∏–¥–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò.")

    cache_key = f"{category}:{hashlib.md5(system_prompt.encode()).hexdigest()}:{hashlib.md5(user_input.encode()).hexdigest()}"
    if cache_key in cache:
        print(f"üì¶ [–ö—ç—à] –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è: {user_input[:30]}...")
        return cache[cache_key]

    try:
        # –î–ª—è 'book' –∏ 'bot' ‚Äî –æ—Ç–¥–∞–µ–º –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –∏–∑ texts
        if category == "book":
            from texts import BOOK_START_PROMPT
            result = BOOK_START_PROMPT
        elif category == "bot":
            from texts import BOT_CREATION_PROMPT
            result = BOT_CREATION_PROMPT
        else:
            messages = [
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_input}
            ]

            params = {
                'question': {'temperature': 0.3, 'max_tokens': 300},
                'event':    {'temperature': 0.4, 'max_tokens': 350},
                'advice':   {'temperature': 0.5, 'max_tokens': 400},
                'book':     {'temperature': 0.1, 'max_tokens': 100},
                'bot':      {'temperature': 0.4, 'max_tokens': 350},
                'image':    {'temperature': 0.4, 'max_tokens': 250},
                'video':    {'temperature': 0.4, 'max_tokens': 350}
            }.get(category, {'temperature': 0.7, 'max_tokens': 200})

            result = await gigachat_request(
                messages=messages,
                temperature=params['temperature'],
                max_tokens=params['max_tokens']
            )

        if len(result.strip()) < 10:
            raise ValueError("–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–º–ø—Ç")

        cache[cache_key] = result
        print(f"üß† [GigaChat] –ù–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {category}")
        return result

    except Exception as e:
        error_msg = f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–∞: {type(e).__name__} - {str(e)[:150]}"
        print(error_msg)
        fallbacks = FALLBACK_PROMPTS.get(category, FALLBACK_PROMPTS['question'])
        if '{input}' in fallbacks[0]:
            chosen = random.choice(fallbacks).format(input=user_input)
        else:
            chosen = fallbacks[0]
        print(f"üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback: {chosen[:80]}...")
        return chosen
